@*@model List<KurbSide.Models.Item>*@
@*@model Dictionary<string, IEnumerable<Item>>*@
@model Tuple<Business, Dictionary<string, IEnumerable<Item>>>

@{
    ViewData["Title"] = Model.Item1.BusinessName;

    var rawCategories = (IEnumerable<string>)TempData["itemCategories"];
    var rawFilter = (string)TempData["catalogueFilter"];

    var categories = new List<string>();
    var activeFilter = "";

    if (rawCategories != null)
    {
        categories.AddRange(rawCategories);
    }
    if (rawFilter != null)
    {
        activeFilter = rawFilter;
    }
}
<link href="~/css/Store/BusinessListings.css" rel="stylesheet" />
<div class="container">
    <div class="row">
        <div class="col justify-content-between">
            <a class="btn btn-sm btn-secondary" asp-action="Index">@("<- Back")</a>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col">
            <div class="card">
                @{
                    if (Model.Item1.LogoLocation == null)
                    {
                        <img alt="No Logo Available For @Model.Item1.BusinessName" class="card-img-top mx-auto" src="~/android-chrome-512x512.png" style="width: 100px; height: 100px; margin: 10px 0 0 0;" />
                    }
                    else
                    {
                        <img alt="@Model.Item1.BusinessName Logo" class="card-img-top mx-auto" src="@Model.Item1.LogoLocation" style="width: 100px; height: 100px; margin: 10px 0 0 0;" />
                    }
                }
                <div class="card-body" style="padding: 0 0 10px 0;">
                    <h5 class="card-title text-sm-center">@Model.Item1.BusinessName <small style="opacity: .5">@Model.Item1.StoreIdentifier</small></h5>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="btn-group btn-group-sm col" style="flex-wrap: wrap; ">
            <a class="btn btn-sm btn-dark btn-filter rounded" style=" margin: 1px 1px 3px 1px;" asp-action="ViewCatalogue">@((activeFilter!="")? "Clear Filter" : "Filter By Category") </a>
            @foreach (string category in categories)
            {
                <a class="btn btn-sm btn-light border-secondary rounded @(category.Equals(activeFilter)? "active" : null)" style="margin:1px 1px 3px 1px;" asp-route-filter="@category">@category</a>
            }
            @if (categories.Count <= 0)
            {
                <span class="btn btn-sm btn-outline-light active border-secondary rounded" style="margin:1px 1px 3px 1px; opacity: 0.50;">No Categories</span>
            }
        </div>
        <form class="col" method="GET" asp-action="ViewCatalogue">
            <div class="input-group input-group-sm">
                <input type="text" id="filter" name="filter" class="form-control border-secondary" placeholder="Search Items" value="@activeFilter">
                <div class="input-group-append">
                    <input type="submit" class="input-group-text btn-dark text-light bg-dark border-dark" id="btnGroupAddon" value="Search" />
                </div>
            </div>
        </form>
    </div>
    <br />
    <div class="row">
        <div class="col-lg">
            @if (Model.Item2.Count <= 0)
            {
                <span class="card">
                    <span class="card-body"><small>No Items Found</small></span>
                </span>
            }
            @foreach (string category in Model.Item2.Keys)
            {
                <div id="@(category)" class="card">
                    <div class="card-header">
                        @(category)
                    </div>

                    <div class="card-body">
                        @foreach (Item item in Model.Item2[category])
                        {
                            <a asp-action="ViewItem" asp-route-id="@item.ItemId" class="list-group-item list-group-item-action flex-column align-items-start">
                                <table>
                                    <tr>
                                        <td>
                                            @if (item.ImageLocation == null)
                                            {
                                                <img id="itemImage" alt="No image available for @item.ItemName" draggable="false" class="zoom" src="~/img/NoImageAvailable.png" />
                                            }
                                            else
                                            {
                                                <img id="itemImage" alt="Image of @item.ItemName" draggable="false" class="zoom" onerror="this.onerror = null;this.src='/img/NoImageAvailable.png';" src="@item.ImageLocation" />
                                            }
                                        </td>
                                        <td>
                                            @item.ItemName
                                        </td>
                                    </tr>
                                </table>
                            </a>
                        }
                    </div>
                </div>
                <br />

            }
        </div>
        <div class="col-sm-3">
            <div class="card">
                <span class="card-body"><small>Cart Placeholder</small></span>
            </div>
        </div>
    </div>
</div>